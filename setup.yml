---
- hosts: localhost
  gather_facts: false
  tags: [setup]
  tasks:
    - name: create security groups
      os_security_group:
        state: present
        name: "{{ item.name }}"
      loop: "{{ security_groups }}"
      tags: [network, sg]

    - name: create security group rules
      os_security_group_rule:
        state: present
        security_group: "{{ item.0.name }}"
        protocol: "{{ item.1.proto }}"
        port_range_min: "{{ item.1.port|default(omit) }}"
        port_range_max: "{{ item.1.port|default(omit) }}"
        remote_ip_prefix: "0.0.0.0/0"
      loop: "{{ security_groups|subelements('rules') }}"
      tags: [network, sg]

    - name: create networks
      os_network:
        state: present
        name: "{{ item.name }}"
      loop: "{{ networks }}"
      tags: [network]

    - name: create subnets
      os_subnet:
        state: present
        name: "{{ item.1.name }}"
        network_name: "{{ item.0.name }}"
        cidr: "{{ item.1.cidr }}"
        dns_nameservers: "{{ item.1.dns_nameservers|default(['8.8.8.8']) }}"
      loop: "{{ networks|subelements('subnets') }}"
      tags: [network, subnet]

    # There are two os_route tasks here to work around a bug that
    # prevents us from creating a router with an external gateway and 
    # interfaces.
    - name: create routers
      os_router:
        state: present
        name: "{{ item.name }}"
        enable_snat: "{{ item.enable_snat|default(true) }}"
      loop: "{{ routers }}"
      tags: [network, router]

    - name: set router gateways and attach subnets
      os_router:
        state: present
        name: "{{ item.name }}"
        interfaces: "{{ item.subnets }}"
        network: "{{ item.gateway }}"
      loop: "{{ routers }}"
      tags: [network, router]

    - name: create servers
      os_server:
        state: present
        name: "{{ item.name }}"
        image: "{{ item.image.name }}"
        flavor: "{{ item.flavor }}"
        key_name: "{{ item.key_name|default(omit) }}"
        nics: "{{ item.nics|default(omit) }}"
        security_groups: "{{ item.security_groups|default(['default']) }}"
        auto_ip: true
        meta:
          ansible_user: "{{ item.image.remote_user }}"
          ansible_group: test_targets
      loop: "{{ servers }}"
      register: created_servers
      tags: [server]

    - add_host:
        name: "{{ item.item.name }}"
        group: openstack
        ansible_user: "{{ item.item.image.remote_user }}"
        ansible_host: "{{ item.openstack.public_v4|default(omit) }}"
        internal_address: "{{ item.openstack.private_v4 }}"
        ansible_python_interpreter: >-
          {{ item.item.image.python_interpreter|default(omit) }}
        ansible_ssh_extra_args: >-
          -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
      changed_when: false
      loop: "{{ created_servers.results }}"
      tags: [server]
